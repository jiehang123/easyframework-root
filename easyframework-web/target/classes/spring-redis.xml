<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">
	
	<cache:annotation-driven/>
	
	<bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}"></property>
		<property name="maxTotal" value="${redis.maxActive}"></property>
		<property name="maxWaitMillis" value="${redis.maxWait}"></property>
		<property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
	</bean>
	
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="poolConfig" ref="jedisConfig"></property>
	</bean>
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

	<!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
	c:template-ref="redisTemplate" /> -->
	
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index = "0" type="RedisOperations">
        	<ref bean="redisTemplate" />
        </constructor-arg>
        <property name="defaultExpiration" value="60" />
	</bean>
	
	
	<!-- 
	redis操作模板，这里采用尽量面向对象的模板
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String
		<property name="keySerializer" value="org.springframework.data.redis.serializer.StringRedisSerializer" />
		<property name="valueSerializer" value="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		<property name="hashKeySerializer" value="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		<property name="hashValueSerializer" value="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		开启事务
		<property name="enableTransactionSupport" value="true" />
	</bean>
	 -->
</beans>